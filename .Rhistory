x <- list(2, "a", "b", TRUE)
x[[2]]
x <- 1:4
y <- 2:3
x+y
read.csv("hw1_data")
read.csv("hw1_data.csv")
table <-  read.csv("hw1_data.csv")
dim(table)
table[2,]
table[3,]
table[1:2,]
table[152:153,]
table[47,]
table[47]$Ozone
table[47]$"Ozone"
(table[47])$Ozone
table[47,]$Ozone
table[,$Ozone]
table[,"Ozone"]
oz <- table[,"Ozone"]
is.na(oz)
sum(1:3)
sum(!is.na(oz))
sum(is.na(oz))
sum(oz[!is.na(oz)])/sum(!is.na(oz))
subtable <- table[Ozone>31,]
table[[Ozone>31,]]
table[[Ozone>31],]
table[[$Ozone>31,]]
temp <- table[, "Temp"]
temp
good <- oz>31 & temp >90
good
newtable <- table[good,]
newtable
TRUE & T
T & F
sr <- newtable[,Solar.R]
sr <- newtable[,"Solar.R"]
sr
mean(1:10)
mean(sr)
sr[!is.na(sr)]
mean(sr[!is.na(sr)])
table6 <- table[table[,"Month"]==6,]
table6
mean(table6[,Temp])
mean(table6[,"Temp"])
max(1:13)
table5 <- table[table[,"Month"]==5,]
table5
max(table5["Ozone"],)
max(table5["Ozone",])
max(table5["Ozone",][!is.na(table5["Ozone",])])
oz5 <- table5["Ozone",]
OZ
oz
oz5
> max(table5[,"Ozone"][!is.na(table5[,"Ozone"])])
max(table5[,"Ozone"][!is.na(table5[,"Ozone"])])
?read.csv
pollutantmean()
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
setwd(directory)
}
pollutantmean()
setwd(specdata)
getwd()
setwd("specdata")
getwd()
i <- 001
sensordata <- read.csv(i)
sensordata <- read.csv(c(i,".csv"))
c(i,".csv")
list.files()
filevector <- list.files()
filevector
list.files("specdata")
getwd()
setwd("/Users/Zhenhao/GitHub/datasciencecoursera")
getwd()
list.files("specdata")
filelist <- list.files("specdata")
read.csv(filelist(1))
read.csv(filelist[i])
presentwd <- getwd()
setwd(directory)
directory <- "specdata"
presentwd <- getwd()
setwd(directory)
read.csv(filelist[i])
sensordata <- read.csv(filelist[i])
setwd(presentwd)
getwd()
vect <- sensordata[,polluntant]
getpollutant <- function (sensor.data, pollutant){
vect <- sensordata[,polluntant]
}
v <- getpollutant(sensordata, "sulfate")
getpollutant <- function (sensor.data, pollutant){
vect <- sensor.data[,polluntant]
}
v <- getpollutant(sensordata, "sulfate")
sensordata
sensor.data["sulfate"]
sensor.data["sulfate"]
sensordata["sulfate"]
getpollutant <- function (sensor.data, pollutant){
vect <- sensor.data[polluntant]
}
v <- getpollutant(sensordata, "sulfate")
sensordata["nitrate"]
polluntant <- "nitrate"
sensordata[polluntant]
getpollutant <- function (sensor.data, pollutant){
sensor.data[polluntant]
}
v <- getpollutant(sensordata,"nitrate")
v
getpollutant <- function (sensor.data, pollutant){
v <- sensor.data[polluntant]
bad <- is.na(v)
v[!bad]
}
v <- getpollutant(sensordata, "nitrate")
v
a <- 1:10
b <- 3:9
c(a,b)
c(NA,c)
vect <- numeric()
c(vect, a)
mean(vect)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
filelist <- list.files(directory)
#vector is the combined list of the observed pollutant value from all sensors
vect <- numeric()
for (i in id){
#read sensor file
presentwd <- getwd()
setwd(directory)
sensordata <- read.csv(filelist[i])
setwd(presentwd)
vect <- c(vect,getpollutant(sensordata, pollutant))
}
mean(vect)
}
getpollutant <- function (sensor.data, pollutant){
v <- sensor.data[polluntant]
bad <- is.na(v)
v[!bad]
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 1:10)
pollutant
pollutantmean("specdata", "sulfate", 70:72)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
filelist <- list.files(directory)
#vector is the combined list of the observed pollutant value from all sensors
vect <- numeric()
for (i in id){
#read sensor file
presentwd <- getwd()
setwd(directory)
sensordata <- read.csv(filelist[i])
setwd(presentwd)
vect <- c(vect,getpollutant(sensordata, pollutant))
}
mean(vect)
}
getpollutant <- function (sensor.data, pollutant){
v <- sensor.data[,polluntant]
bad <- is.na(v)
v[!bad]
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 70:72)
getwd()
setwd("specdata")
filelist <- list.files()
sensordata <- read.csv(filelist[1])
sensordata
sensordata[1]
sensordata[1,]
pollutantmean("specdata", "sulfate", 1:10)
getwd()
setwd("/Users/Zhenhao/GitHub/datasciencecoursera/")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 1:10)
sensor.data[,2]
sensordata[,2]
v <- sensor.data[,2]
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 70:72)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
submit()
submit()
submit()
submit()
table <- data.frame(id = integer(), nobs = integer())
table <- rcob(table, table)
table <- rbind(table, table)
table
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
#    data format:   Date sulfate nitrate ID
filelist <- list.files(directory)
table <- data.frame(id = integer(), nobs = integer())
for (i in id){
presentwd <- getwd()
setwd(directory)
sensordata <- read.csv(filelist[i])
setwd(presentwd)
s.bad <- is.na(sensordata[,"sulfate"])
n.bad <- is.na(sensordata[,"nitrate"])
good <- sensordata[!s.bad && !n.bad,]
item <- data.frame(i,nrow(good))
table <- rbind(table, item)
}
table
}
complete("specdata", c(2, 4, 8, 10, 12))
directory <- "specdata"
presentwd <- getwd()
setwd(directory)
sensordata <- read.csv(filelist[1])
setwd(presentwd)
sensordata
s.bad <- is.na(sensordata[,"sulfate"])
s.bad
n.bad <- is.na(sensordata[,"nitrate"])
n.bad
!s.bad && !n.bad
!s.bad & !n.bad
good <- sensordata[!s.bad & !n.bad,]
good
item <- data.frame(1,nrow(good))
item
item <- data.frame(id =1,nobs = nrow(good))
item
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
#    data format:   Date sulfate nitrate ID
filelist <- list.files(directory)
table <- data.frame(id = integer(), nobs = integer())
for (i in id){
presentwd <- getwd()
setwd(directory)
sensordata <- read.csv(filelist[i])
setwd(presentwd)
s.bad <- is.na(sensordata[,"sulfate"])
n.bad <- is.na(sensordata[,"nitrate"])
good <- sensordata[!s.bad & !n.bad,]
item <- data.frame(id =i,nobs = nrow(good))
table <- rbind(table, item)
}
table
}
complete("specdata", c(2, 4, 8, 10, 12))
submit()
submit()
submit()
?cor
source("complete.R")
source("complete.R")
source("corr.R")
corr("specdata")
corr("specdata",500)
corr("specdata",500)
corr("specdata",500)
corr("specdata",1000)
t <- corr("specdata",1000)
t
t <- corr("specdata",1000)
t
t[,nobs] > 1000
t[,nobs]
t[,nobs]
t[nobs]
t
t[nobs>1000,]
t[nobs>rep(1000),]
t[nobs>rep(1000),]
t <- corr("specdata", 1000)
t
corr("specdata", 1000)
table <- complete("specdata")
table
table[,nobs]
names(table)
nb <- names(table[2])
table[,nb]
table[nb>1000,]
table[,nb] > 1000
table[table[,nb] > 1000,]
tbb <- corr("specdata",800)
tbb
table <- complete("specdata",)
table
nb <- names(table[2])
nb
truth.value <- table[,nb] > 800
truth.value
table[truth.value,]
table <- table[truth.value,]
table
corr("specdata", 850)
corr("specdata", 850)
corr("specdata", 850)
source("corr.R")
corr("specdata", 850)
source("corr.R")
source("corr.R")
source("corr.R")
read(dir,i){
filelist <- list.files(dir)
presentwd <- getwd()
setwd(dir)
sensordata <- read.csv(filelist[i])
setwd(presentwd)
sensordata
}
myread(dir,i){
filelist <- list.files(dir)
presentwd <- getwd()
setwd(dir)
sensordata <- read.csv(filelist[i])
setwd(presentwd)
sensordata
}
read(dir,i){
filelist <- list.files(dir)
presentwd <- getwd()
setwd(dir)
sensordata <- read.csv(filelist[i])
setwd(presentwd)
sensordata
}
rrrrread(dir,i){
filelist <- list.files(dir)
presentwd <- getwd()
setwd(dir)
sensordata <- read.csv(filelist[i])
setwd(presentwd)
sensordata
}
read <- function((dir,i){
filelist <- list.files(dir)
presentwd <- getwd()
setwd(dir)
sensordata <- read.csv(filelist[i])
setwd(presentwd)
sensordata
}
read <- function((dir,i){
filelist <- list.files(dir)
presentwd <- getwd()
setwd(dir)
sensordata <- read.csv(filelist[i])
setwd(presentwd)
sensordata
}
source("corr.R")
source("corr.R")
read("spectdata",table[,1][1])[,2:3]
getwd()
read("specdata",table[,1][1])[,2:3]
read("specdata",table[,1][1])[,2:3]
source("corr.R")
table
read("specdata",(table[,1])[1])[,2:3]
pool <- rbind(pool,comp.sub)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
table <- complete(directory,)
truth.value <- (table[,2] > threshold)
table <- table[truth.value,]
for (i in table[,1]){
comp.sub <- read(directory,i)[,2:3]
pool <- rbind(pool,comp.sub)
}
}
read <- function(dir,i){
filelist <- list.files(dir)
presentwd <- getwd()
setwd(dir)
sensordata <- read.csv(filelist[i])
setwd(presentwd)
sensordata
}
source("corr.R")
corr("specdata", 1500)
source("corr.R")
corr("specdata", 1500)
source("corr.R")
corr("specdata", 1500)
source("corr.R")
corr("specdata", 1500)
source("corr.R")
corr("specdata", 1500)
corr("specdata", 150)
corr("specdata", 800)
corr("specdata", 5000)
corr("specdata", 1000)
source("corr.R")
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 800)
head(cr)
summary(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 800)
summary(cr)
cr <- corr("specdata", 150)
head(cr)
?head
summary(cr)
submit()
8
submit()
submit()
submit()
cr
